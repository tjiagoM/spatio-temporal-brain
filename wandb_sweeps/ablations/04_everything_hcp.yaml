method: random

name: 04_everything_hcp
program: main_loop.py
parameters:
  dataset_type:
    value: hcp
  sweep_type:
    value: node_meta
  tcn_depth:
    distribution: int_uniform
    min: 1
    max: 3
  tcn_norm_strategy:
    distribution: categorical
    values:
      - weight
      - batchnorm
  tcn_kernel:
    distribution: int_uniform
    min: 3
    max: 7
  tcn_hidden_units:
    distribution: categorical
    values:
      - 8
      - 16
      - 32
  tcn_final_transform_layers:
    distribution: int_uniform
    min: 1
    max: 3
  temporal_embed_size:
    distribution: categorical
    values:
      - 8
      - 16
      - 32
      - 64
  lr_scheduler:
    distribution: categorical
    values:
      - none
      - step
      - plateau
      - cosine_annealing
  optimiser:
    distribution: categorical
    values:
      - sgd
      - adam
      - adamw
      - rmsprop
  use_ema:
    values:
      - true
      - false
  edge_weights:
    value: true
  fold_num:
    value: 2
  conn_type:
    value: struct
  batch_size:
    value: 100
  analysis_type:
    value: st_multimodal
  num_epochs:
    value: 250
  num_nodes:
    value: 68
  activation:
    value: relu
  channels_conv:
    value: 8
  conv_strategy:
    value: tcn_entire
  dropout:
    distribution: uniform
    max: 0.7
    min: 0
  early_stop_steps:
    value: 33
  encoding_strategy:
    value: none
  num_gnn_layers:
    value: 1
  threshold:
    value: 10
  lr:
    distribution: log_uniform
    max: -2.3025850929940455
    min: -11.512925464970229
  weight_decay:
    distribution: log_uniform
    max: 0
    min: -27.631021115928547
  normalisation:
    distribution: categorical
    values:
    - subject_norm
    - roi_norm
  pooling:
    distribution: categorical
    values:
      - mean
      - add
      - concat
      - dpadd
      - dpmean
      - dpmax
  target_var:
    value: gender
  time_length:
    value: 490
  nodemodel_aggr:
    distribution: categorical
    values:
      - all
      - mean
      - max
      - sum
  nodemodel_scalers:
    distribution: categorical
    values:
      - all
      - none
  nodemodel_layers:
    distribution: int_uniform
    min: 1
    max: 4
  final_mlp_layers:
    distribution: int_uniform
    min: 1
    max: 2